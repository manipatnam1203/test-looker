steps:
  # Clone the repository
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/manipatnam1203/test-looker']
  
  # Identify the changed files
  - name: 'alpine/git'
    entrypoint: '/bin/sh'
    args: 
      - '-c'
      - 'git log --name-only --pretty="format:" -1 > changed_files.txt'

  # Get the short git commit hash for version tagging and store it as an env variable
  - name: 'alpine/git'
    entrypoint: '/bin/sh'
    args: 
      - '-c'
      - 'echo "GIT_COMMIT_SHORT=$(git rev-parse --short HEAD)" >> $BUILD_SPEC_DIR/git_commit_short.env'

  # Build the Docker image with all files and version tags
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        source $BUILD_SPEC_DIR/git_commit_short.env
        docker build -t gcr.io/$PROJECT_ID/my-artifact:$GIT_COMMIT_SHORT -t gcr.io/$PROJECT_ID/my-artifact:latest .
  
  # Push the version-tagged Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/my-artifact']
    env:
      - 'GIT_COMMIT_SHORT=$(cat $BUILD_SPEC_DIR/git_commit_short.env)'

  # Sync only changed files to Google Cloud Storage with version tagging
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        GIT_COMMIT_SHORT=$(cat ./git_commit_hash.txt)
        while read -r file; do
          if [[ -f "src/$file" ]]; then
            gsutil cp "src/$file" "gs://gcs-looker/dags/$file"
          fi
        done < changed_files.txt


options:
  logging: CLOUD_LOGGING_ONLY

# adding cache